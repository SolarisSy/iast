services:
  # ==========================================
  # FRONTEND - NEXT.JS
  # ==========================================
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        NODE_ENV: development
        NEXT_PUBLIC_API_URL: ""
    ports:
      - "${FRONTEND_PORT:-3001}:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - BACKEND_URL=http://backend:4000
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=3001"
    volumes:
      # Monta o código fonte para hot-reload em desenvolvimento
      - ./src:/app/src
      - ./public:/app/public
      - ./package.json:/app/package.json
      - ./next.config.mjs:/app/next.config.mjs
      - ./tsconfig.json:/app/tsconfig.json
      - ./tailwind.config.ts:/app/tailwind.config.ts
      - ./postcss.config.mjs:/app/postcss.config.mjs
      # Usa volumes nomeados para node_modules e .next
      - frontend-node-modules:/app/node_modules
      - frontend-next:/app/.next
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - iast-network
    command: npm run dev

  # ==========================================
  # BACKEND - NODE.JS + EXPRESS
  # ==========================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    ports:
      - "${BACKEND_PORT:-4000}:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - OPENAI_API_KEY=${OPENAI_API_KEY:?OPENAI_API_KEY is required}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.backend.loadbalancer.server.port=4000"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.priority=100"
    volumes:
      # Monta o código fonte para hot-reload
      - ./backend:/app
      # Usa volume nomeado para node_modules
      - backend-node-modules:/app/node_modules
      # Monta corpus e uploads
      - ./src/corpus:/app/corpus:ro
      - backend-uploads:/app/uploads
    restart: unless-stopped
    networks:
      - iast-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# ==========================================
# VOLUMES NOMEADOS
# ==========================================
volumes:
  frontend-node-modules:
    driver: local
  frontend-next:
    driver: local
  backend-node-modules:
    driver: local
  backend-uploads:
    driver: local

# ==========================================
# REDE CUSTOMIZADA
# ==========================================
networks:
  iast-network:
    driver: bridge

